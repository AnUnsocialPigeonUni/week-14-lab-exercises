Description: Networking architecture

Parameters:
  VpcCidr:
    Description: CIDR block for the VPC
    Type: String
  UserDataScript:
    Type: String
  PubSubnetACidr:
    Type: String
  StudentName:
    Type: String

Resources:
  # VPC
  JakeVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      Tags: 
        - Key: Name
          Value: !Sub "${StudentName}-vpc"

  # PubSubnetA
  PubSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref JakeVPC
      CidrBlock: !Ref PubSubnetACidr
      AvailabilityZone: "eu-west-2a"
      Tags:
        - Key: Name
          Value: !Sub "${StudentName}-pub-subnet-a"

  # IGW
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    
  # Attatch IGW to VPC
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref JakeVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable: 
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref JakeVPC

  # Route Table Internet Gateway
  PubRouteA:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${StudentName}-pub-route-a"
      VpcId: !Ref JakeVPC

  PubSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PubRouteA
      SubnetId: !Ref PubSubnetA
      Tags:
        - Key: JakeTearDown
          Value: True


  # EC2 Stuff
  
  # Security Group
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "${STUDENT_NAME}-Security-Group"
      SecurityGroupIngress: !
        - Description: Ingress Port 80
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - Description: Ingress Port 8080
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - Description: Ingress Port 3000
          IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

      VpcId: !Ref JakeVPC

  # EC2 Instance itself
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: "eu-west-2a"
      SecurityGroupIds: [ !Ref EC2SecurityGroup]
      UserData: 
        Fn::Base64: !Ref UserDataScript
      InstanceType: "t2.micro"
      ImageId: "ami-09ee0944866c73f62"
      KeyName: "Jake"
      SecurityGroups:
        - !Ref EC2SecurityGroup
      
